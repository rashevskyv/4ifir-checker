name: Run Python Script

on:
  schedule:
    - cron: '*/30 * * * *' # Запускати скрипт кожні 10 хвилин
  workflow_dispatch: # Дозволити ручний запуск

jobs:
  run_script:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_PAT }}
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run script
      run: python checker.py
      env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Set up a custom date format
      run: echo "CURRENT_DATE=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Create Tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@example.com"
        git tag ${{ env.CURRENT_DATE }}
        git push origin ${{ env.CURRENT_DATE }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.CURRENT_DATE }}
        release_name: 4IFIR ${{ env.CURRENT_DATE }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
    
    - name: Upload All Files from 'github' folder
      run: |
        for file in github/*; do
          echo "Uploading $file"
          ENCODED_NAME=$(curl -Gso /dev/null -w %{url_effective} --data-urlencode "name=$(basename $file)" "")
          curl -v \
            -H "Authorization: token ${{ secrets.GH_PAT }}" \
            -H "Content-Type: $(file -b --mime-type $file)" \
            --data-binary @$file \
            "https://uploads.github.com/repos/rashevskyv/4ifir-checker/releases/${{ steps.create_release.outputs.id }}/assets?name=${ENCODED_NAME:2}"
        done

    - name: Check for changes in 'github' folder
      id: check_changes
      run: |
        git fetch origin
        DIFF=$(git diff --name-only origin/main...HEAD -- 'github/')
        if [ "$DIFF" != "" ]; then
          echo "Files in 'github' folder changed."
          echo "HAS_CHANGES=true" >> $GITHUB_ENV
        else
          echo "No changes in 'github' folder."
          echo "HAS_CHANGES=false" >> $GITHUB_ENV
        fi

    - name: Set up a custom date format
      if: env.HAS_CHANGES == 'true'
      run: echo "CURRENT_DATE=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

    - name: Commit and push changes
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        git add .
        git commit -m "Check update" || exit 0
        git push
